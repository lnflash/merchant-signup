name: Build and Deploy to DigitalOcean

on:
  push:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run environment checks
      run: node scripts/check-env.js
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      
    - name: Build Next.js app (static export)
      run: |
        npm run check-build-env
        npm run build:static:ci
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
        IS_BUILD_TIME: "true"
        
    - name: List built files
      run: |
        echo "Static export structure:"
        ls -la out/ || echo "No 'out' directory found"
        
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
    - name: Deploy to DigitalOcean App Platform
      run: |
        # Create a compressed archive of the out directory
        echo "Creating deployment archive..."
        tar -czf deploy.tar.gz -C out .
        
        # List available apps to find the correct ID
        echo "Listing available apps..."
        doctl apps list --format ID,Spec.Name --no-header | grep -i merchant
        
        # Get app ID (using stored secret for reliability)
        APP_ID="${{ secrets.DIGITALOCEAN_APP_ID }}"
        if [ -z "$APP_ID" ]; then
          echo "Using app ID lookup fallback..."
          APP_ID=$(doctl apps list --format ID,Spec.Name --no-header | grep -i merchant | head -n 1 | awk '{print $1}')
        fi
        
        # Validate app ID
        if [ -z "$APP_ID" ]; then
          echo "ERROR: Could not determine app ID. Please set the DIGITALOCEAN_APP_ID secret."
          exit 1
        fi
        
        echo "Using App ID: $APP_ID"
        
        # Upload using doctl
        echo "Uploading to DigitalOcean App Platform..."
        doctl apps create-deployment $APP_ID --wait